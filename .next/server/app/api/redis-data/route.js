"use strict";(()=>{var e={};e.id=586,e.ids=[586],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},98216:e=>{e.exports=require("net")},86624:e=>{e.exports=require("querystring")},74026:e=>{e.exports=require("string_decoder")},82452:e=>{e.exports=require("tls")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},36924:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>v,patchFetch:()=>$,requestAsyncStorage:()=>w,routeModule:()=>g,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{GET:()=>d,POST:()=>p});var n=r(49303),i=r(88716),o=r(60670),a=r(45609),u=r(38933),l=r(79887),c=r(87070);async function d(){let e=await (0,a.getServerSession)(u.authOptions);if(!e)return c.NextResponse.json({error:"Not authenticated"},{status:401});try{let t=await (0,l.k)(),r=await t.json.get(`user:${e.user.id}`),s={user:{...r,loginCount:r.loginCount||0,lastLogin:r.lastLogin||null,linkedAccounts:e.user.linkedAccounts||[]}};return c.NextResponse.json(s)}catch(e){return console.error("Error fetching user data:",e),c.NextResponse.json({error:"Failed to fetch user data"},{status:500})}}async function p(e){if(!await (0,a.getServerSession)(u.authOptions))return c.NextResponse.json({error:"Not authenticated"},{status:401});try{return c.NextResponse.json({message:"Operation completed successfully"})}catch(e){return console.error("Error processing request:",e),c.NextResponse.json({error:"Failed to process request"},{status:500})}}let g=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/redis-data/route",pathname:"/api/redis-data",filename:"route",bundlePath:"app/api/redis-data/route"},resolvedPagePath:"C:\\Users\\Lill\\Desktop\\projetos git\\Priority Flow\\app\\api\\redis-data\\route.js",nextConfigOutput:"",userland:s}),{requestAsyncStorage:w,staticGenerationAsyncStorage:m,serverHooks:x}=g,v="/api/redis-data/route";function $(){return(0,o.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}},38933:(e,t,r)=>{r.r(t),r.d(t,{GET:()=>x,POST:()=>x,authOptions:()=>m});var s=r(75571),n=r.n(s),i=r(77210),o=r(79887),a=r(19475);let u=e=>process.env[e]||null,l=u("GITHUB_CLIENT_ID"),c=u("GITHUB_CLIENT_SECRET"),d=u("DISCORD_CLIENT_ID"),p=u("DISCORD_CLIENT_SECRET"),g=u("NEXTAUTH_SECRET"),w=[];l&&c&&w.push((0,i.Z)({clientId:l,clientSecret:c})),d&&p&&w.push((0,a.Z)({clientId:d,clientSecret:p}));let m={providers:w,adapter:(0,o.T)(),secret:g,session:{strategy:"database",maxAge:1800},callbacks:{async signIn({user:e,account:t,profile:r}){let s=await (0,o.k)(),n=(0,o.T)(),i=r.name||e.name,a=r.picture||e.image;"github"===t.provider?(i=r.name||r.login||e.name,a=r.avatar_url||e.image):"discord"===t.provider&&(i=r.username||e.name,a=`https://cdn.discordapp.com/avatars/${r.id}/${r.avatar}.png`||e.image);let u=await s.get(`user:email:${e.email}`);if(u){let e=await s.json.get(`user:${u}`);await n.linkAccount({userId:u,provider:t.provider,providerAccountId:t.providerAccountId});let r=await n.getLinkedAccounts(u),o={...e,name:i||e.name,image:a||e.image,loginCount:(e.loginCount||0)+1,lastLogin:new Date().toISOString(),linkedAccounts:r};return await s.json.set(`user:${u}`,"$",o),!0}let l={id:e.id,email:e.email,name:i,image:a,loginCount:1,lastLogin:new Date().toISOString(),linkedAccounts:[t.provider]};return await s.json.set(`user:${l.id}`,"$",l),await s.set(`user:email:${l.email}`,l.id),await n.linkAccount({userId:l.id,provider:t.provider,providerAccountId:t.providerAccountId}),!0},async session({session:e,user:t}){let r=await (0,o.k)(),s=await r.json.get(`user:${t.id}`);return s&&(e.user={...e.user,id:s.id,name:s.name,email:s.email,image:s.image,loginCount:s.loginCount,lastLogin:s.lastLogin,linkedAccounts:s.linkedAccounts||[]}),e}},debug:!1},x=n()(m)},79887:(e,t,r)=>{let s;r.d(t,{T:()=>u,k:()=>a});var n=r(79984),i=r(84770),o=r.n(i);async function a(){return s||((s=(0,n.createClient)({url:process.env.REDIS_URL,password:process.env.REDIS_PASSWORD||void 0})).isOpen||await s.connect(),s.on("error",e=>{console.error("Redis Client Error",e)})),s}let u=()=>({async createUser(e){let t=await a(),r=o().randomUUID();return await t.json.set(`user:${r}`,"$",{...e,id:r,loginCount:0,lastLogin:null}),await t.set(`user:email:${e.email}`,r),console.log("Created user:",r,"with initial login count: 0"),{id:r,...e,loginCount:0,lastLogin:null}},async getUser(e){let t=await a(),r=await t.json.get(`user:${e}`);return console.log("Retrieved user:",e,"Data:",r),r||null},async getUserByEmail(e){let t=await a(),r=await t.get(`user:email:${e}`);if(!r)return null;let s=await t.json.get(`user:${r}`);return console.log("Retrieved user by email:",e,"Data:",s),s},async getUserByAccount({provider:e,providerAccountId:t}){let r=await a(),s=`account:${e}:${t}`,n=await r.get(s);if(!n)return null;let i=await r.json.get(`user:${n}`);return console.log("Retrieved user by account:",e,t,"Data:",i),i},async updateUser(e){let t=await a(),r=e.id;return await t.json.set(`user:${r}`,"$",e),console.log("Updated user:",r,"New data:",e),e},async linkAccount(e){let t=await a(),r=`account:${e.provider}:${e.providerAccountId}`;return await t.set(r,e.userId),console.log("Linked account:",r,"to user ID:",e.userId),e},async getLinkedAccounts(e){let t=await a(),r=await t.keys("account:*:*"),s=[];for(let n of r)if(await t.get(n)===e){let[e,t]=n.split(":");s.push(t)}return s},async createSession(e){let t=await a();e.expires instanceof Date||(e.expires=new Date(e.expires));let r=Math.floor(e.expires.getTime()/1e3),s={...e,expires:r};return await t.json.set(`session:${e.sessionToken}`,"$",s),await t.set(`session:user:${e.userId}`,e.sessionToken),console.log("Created session for user:",e.userId),e},async getSessionAndUser(e){let t=await a(),r=await t.json.get(`session:${e}`);if(!r)return console.log(`Session with token ${e} not found.`),null;r.expires=new Date(1e3*r.expires);let s=await t.json.get(`user:${r.userId}`);return s?(console.log("Retrieved session:",e),console.log("Retrieved user:",s),{session:r,user:{...s,loginCount:s.loginCount||0,lastLogin:s.lastLogin||null}}):(console.log(`User with ID ${r.userId} not found.`),null)},async updateSession(e){let t=await a();e.expires instanceof Date||(e.expires=new Date(e.expires));let r=Math.floor(e.expires.getTime()/1e3),s={...e,expires:r};return await t.json.set(`session:${e.sessionToken}`,"$",s),console.log("Updated session:",e.sessionToken),e},async deleteSession(e){let t=await a();console.log(`Deleting session with token: ${e}`),await t.del(`session:${e}`)},async createVerificationToken(e){let t=await a(),r=`verification:${e.identifier}:${e.token}`;return await t.json.set(r,"$",e),console.log("Created verification token:",r),e},async useVerificationToken({identifier:e,token:t}){let r=await a(),s=`verification:${e}:${t}`,n=await r.json.get(s);return n?(await r.del(s),console.log("Used and deleted verification token:",s),n):null}})}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,91,406,70],()=>r(36924));module.exports=s})();
"use strict";(()=>{var e={};e.id=912,e.ids=[912],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},98216:e=>{e.exports=require("net")},86624:e=>{e.exports=require("querystring")},74026:e=>{e.exports=require("string_decoder")},82452:e=>{e.exports=require("tls")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},86014:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>d,patchFetch:()=>p,requestAsyncStorage:()=>u,routeModule:()=>o,serverHooks:()=>c,staticGenerationAsyncStorage:()=>l});var n=r(49303),s=r(88716),i=r(60670),a=r(38933);let o=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/auth/[...nextauth]/route",pathname:"/api/auth/[...nextauth]",filename:"route",bundlePath:"app/api/auth/[...nextauth]/route"},resolvedPagePath:"C:\\Users\\Lill\\Desktop\\projetos git\\Priority Flow\\app\\api\\auth\\[...nextauth]\\route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:u,staticGenerationAsyncStorage:l,serverHooks:c}=o,d="/api/auth/[...nextauth]/route";function p(){return(0,i.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:l})}},38933:(e,t,r)=>{r.r(t),r.d(t,{GET:()=>x,POST:()=>x,authOptions:()=>m});var n=r(75571),s=r.n(n),i=r(77210),a=r(79887),o=r(19475);let u=e=>process.env[e]||null,l=u("GITHUB_CLIENT_ID"),c=u("GITHUB_CLIENT_SECRET"),d=u("DISCORD_CLIENT_ID"),p=u("DISCORD_CLIENT_SECRET"),g=u("NEXTAUTH_SECRET"),w=[];l&&c&&w.push((0,i.Z)({clientId:l,clientSecret:c})),d&&p&&w.push((0,o.Z)({clientId:d,clientSecret:p}));let m={providers:w,adapter:(0,a.T)(),secret:g,session:{strategy:"database",maxAge:1800},callbacks:{async signIn({user:e,account:t,profile:r}){let n=await (0,a.k)(),s=(0,a.T)(),i=r.name||e.name,o=r.picture||e.image;"github"===t.provider?(i=r.name||r.login||e.name,o=r.avatar_url||e.image):"discord"===t.provider&&(i=r.username||e.name,o=`https://cdn.discordapp.com/avatars/${r.id}/${r.avatar}.png`||e.image);let u=await n.get(`user:email:${e.email}`);if(u){let e=await n.json.get(`user:${u}`);await s.linkAccount({userId:u,provider:t.provider,providerAccountId:t.providerAccountId});let r=await s.getLinkedAccounts(u),a={...e,name:i||e.name,image:o||e.image,loginCount:(e.loginCount||0)+1,lastLogin:new Date().toISOString(),linkedAccounts:r};return await n.json.set(`user:${u}`,"$",a),!0}let l={id:e.id,email:e.email,name:i,image:o,loginCount:1,lastLogin:new Date().toISOString(),linkedAccounts:[t.provider]};return await n.json.set(`user:${l.id}`,"$",l),await n.set(`user:email:${l.email}`,l.id),await s.linkAccount({userId:l.id,provider:t.provider,providerAccountId:t.providerAccountId}),!0},async session({session:e,user:t}){let r=await (0,a.k)(),n=await r.json.get(`user:${t.id}`);return n&&(e.user={...e.user,id:n.id,name:n.name,email:n.email,image:n.image,loginCount:n.loginCount,lastLogin:n.lastLogin,linkedAccounts:n.linkedAccounts||[]}),e}},debug:!1},x=s()(m)},79887:(e,t,r)=>{let n;r.d(t,{T:()=>u,k:()=>o});var s=r(79984),i=r(84770),a=r.n(i);async function o(){return n||((n=(0,s.createClient)({url:process.env.REDIS_URL,password:process.env.REDIS_PASSWORD||void 0})).isOpen||await n.connect(),n.on("error",e=>{console.error("Redis Client Error",e)})),n}let u=()=>({async createUser(e){let t=await o(),r=a().randomUUID();return await t.json.set(`user:${r}`,"$",{...e,id:r,loginCount:0,lastLogin:null}),await t.set(`user:email:${e.email}`,r),console.log("Created user:",r,"with initial login count: 0"),{id:r,...e,loginCount:0,lastLogin:null}},async getUser(e){let t=await o(),r=await t.json.get(`user:${e}`);return console.log("Retrieved user:",e,"Data:",r),r||null},async getUserByEmail(e){let t=await o(),r=await t.get(`user:email:${e}`);if(!r)return null;let n=await t.json.get(`user:${r}`);return console.log("Retrieved user by email:",e,"Data:",n),n},async getUserByAccount({provider:e,providerAccountId:t}){let r=await o(),n=`account:${e}:${t}`,s=await r.get(n);if(!s)return null;let i=await r.json.get(`user:${s}`);return console.log("Retrieved user by account:",e,t,"Data:",i),i},async updateUser(e){let t=await o(),r=e.id;return await t.json.set(`user:${r}`,"$",e),console.log("Updated user:",r,"New data:",e),e},async linkAccount(e){let t=await o(),r=`account:${e.provider}:${e.providerAccountId}`;return await t.set(r,e.userId),console.log("Linked account:",r,"to user ID:",e.userId),e},async getLinkedAccounts(e){let t=await o(),r=await t.keys("account:*:*"),n=[];for(let s of r)if(await t.get(s)===e){let[e,t]=s.split(":");n.push(t)}return n},async createSession(e){let t=await o();e.expires instanceof Date||(e.expires=new Date(e.expires));let r=Math.floor(e.expires.getTime()/1e3),n={...e,expires:r};return await t.json.set(`session:${e.sessionToken}`,"$",n),await t.set(`session:user:${e.userId}`,e.sessionToken),console.log("Created session for user:",e.userId),e},async getSessionAndUser(e){let t=await o(),r=await t.json.get(`session:${e}`);if(!r)return console.log(`Session with token ${e} not found.`),null;r.expires=new Date(1e3*r.expires);let n=await t.json.get(`user:${r.userId}`);return n?(console.log("Retrieved session:",e),console.log("Retrieved user:",n),{session:r,user:{...n,loginCount:n.loginCount||0,lastLogin:n.lastLogin||null}}):(console.log(`User with ID ${r.userId} not found.`),null)},async updateSession(e){let t=await o();e.expires instanceof Date||(e.expires=new Date(e.expires));let r=Math.floor(e.expires.getTime()/1e3),n={...e,expires:r};return await t.json.set(`session:${e.sessionToken}`,"$",n),console.log("Updated session:",e.sessionToken),e},async deleteSession(e){let t=await o();console.log(`Deleting session with token: ${e}`),await t.del(`session:${e}`)},async createVerificationToken(e){let t=await o(),r=`verification:${e.identifier}:${e.token}`;return await t.json.set(r,"$",e),console.log("Created verification token:",r),e},async useVerificationToken({identifier:e,token:t}){let r=await o(),n=`verification:${e}:${t}`,s=await r.json.get(n);return s?(await r.del(n),console.log("Used and deleted verification token:",n),s):null}})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[948,91,406],()=>r(86014));module.exports=n})();